name: CI

on: [push]

jobs:
  js_qa:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - name: Install Node.js dependencies
      run: npm ci
    - name: Run QA checks
      run: |
        make lint_js

  js_tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - name: Install Node.js dependencies
      run: npm ci
    - name: Run tests suite
      run: make tests_js

  python_qa:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.13
      uses: actions/setup-python@v1
      with:
        python-version: 3.13
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U pip poetry
        poetry install
    - name: Run QA checks
      run: |
        make lint_python
        make isort_python

  python_tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ci
        ports:
        - 5432:5432
        # Needed because the postgres container does not provide a healthcheck
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
    - name: Install PostgreSQL client
      run: sudo apt-get -yqq install libpq-dev
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U pip poetry
        poetry install
    - name: Setup env json file
      run: cp tests/.env.ci .env
    - name: Run tests suite
      run: make tests_python
