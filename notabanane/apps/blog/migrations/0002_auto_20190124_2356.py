# Generated by Django 2.0.9 on 2019-01-25 04:56

import datetime
from django.db import migrations, models
import django.db.models.deletion
import modelcluster.contrib.taggit
import modelcluster.fields
import wagtail.core.fields


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailimages', '0021_image_file_hash'),
        ('wagtailcore', '0040_page_draft_title'),
        ('taggit', '0002_auto_20150616_2121'),
        ('blog', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoryRecipePage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='blog.Category', verbose_name='Category')),
            ],
        ),
        migrations.CreateModel(
            name='RecipePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('introduction', wagtail.core.fields.RichTextField(verbose_name='Body')),
                ('date', models.DateField(default=datetime.datetime.today, verbose_name='Post date')),
                ('preparation_time', models.DurationField(blank=True, null=True, verbose_name='Preparation time')),
                ('cook_time', models.DurationField(blank=True, null=True, verbose_name='Cook time')),
                ('fridge_time', models.DurationField(blank=True, null=True, verbose_name='Fridge time')),
                ('rest_time', models.DurationField(blank=True, null=True, verbose_name='Rest time')),
                ('recipe_yield', models.CharField(blank=True, max_length=127, verbose_name='Yield')),
                ('categories', models.ManyToManyField(blank=True, through='blog.CategoryRecipePage', to='blog.Category')),
                ('header_image', models.ForeignKey(blank=True, help_text='Header image displayed when rendering the article or if the article is featured on the home page', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image', verbose_name='Header image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='TagRecipePage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipe_tags', to='blog.RecipePage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_tagrecipepage_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='recipepage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='blog.TagRecipePage', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='categoryrecipepage',
            name='page',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipe_categories', to='blog.RecipePage'),
        ),
    ]
